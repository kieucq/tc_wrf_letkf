
set -x

[ $# -ne 2 ]  &&  exit 99

DATA=/stmp/$USER/bufrdump.readmg_only
mkdir -p $DATA
cd $DATA
err=$?

########[ "$err" -eq '0' ]  && rm *

#######################################################################

cat <<\inputEOF > source.f

      CHARACTER*8  SUBSET

      DATA  LUBFR/8/,IREC/0/,ISUB/0/,ISUBT/0/

C  OPEN BUFR FILE - READ IN FIRST MESSAGE (TABLE A, B, D ENTRIES)

      CALL DATELEN(10)
      CALL OPENBF(LUBFR,'IN',LUBFR)
              call openbf(0,'QUIET',1)
      PRINT 100, LUBFR
  100 FORMAT(/5X,'===> BUFR/PREPDA DATA SET IN UNIT',I3,' SUCCESSFULLY',
     $ ' OPENED FOR INPUT; FIRST MESSAGE CONTAINS BUFR TABLES A,B,D'/)

C  READ IN FIRST DATA MESSAGE AND GET DATE

      CALL READMG(LUBFR,SUBSET,IDATE,IRET)

      IF(IRET.NE.0)  GO TO 999
      CALL UFBCNT(LUBFR,IREC,IDUMMY)
      ISUB = NMSUB(LUBFR)
      ISUBT = ISUBT + ISUB
      PRINT 101, IDATE
  101 FORMAT(/' BUFR/PREPDA FILE HAS DATE: ',I10///)
      PRINT 102, IREC,SUBSET,IDATE,ISUB,ISUBT
  102 FORMAT(/'===> READ IN BUFR DATA MSG # ',I5,' - ','TABLE A ',
     $ 'ENTRY "',A8,'", DATE ',I11,' - ',I5,' RPTS IN MSG; TOTAL # ',
     $ 'RPTS SO FAR ',I8/)

   10 CONTINUE

C READ IN SUBSEQUENT DATA MESSAGES

      CALL READMG(LUBFR,SUBSET,IDATE,IRET)
      IF(IRET.NE.0)  GO TO 99
      CALL UFBCNT(LUBFR,IREC,IDUMMY)
      ISUB = NMSUB(LUBFR)
      ISUBT = ISUBT + ISUB
      PRINT 102, IREC,SUBSET,IDATE,ISUB,ISUBT
      GO TO 10

   99 CONTINUE

C ALL MESSAGES HAVE BEEN READ

      PRINT 3030, IREC
 3030 FORMAT(/10X,'==> ALL BUFR MESSAGES READ IN AND PROCESSED: TOTAL ',
     $ 'NUMBER OF DATA MESSAGES IN BUFR/PREPDA FILE IS:',I4//)

      STOP

  999 CONTINUE
      CALL BORT('DECODE - ERROR READING BUFR DUMP FILE ')
      END

inputEOF
#######################################################################

ncepxlf -c -O3 -qlist -qsource -qnosave -qintsize=4 -qrealsize=4 \
 -bnoquiet -qxlf77=leadzero source.f

#########ncepxlf source.o /nwprod/lib/libw3_4.a /nwprod/lib/libbufr_4_64.a -o source.x
ncepxlf source.o /nwprod/lib/libw3_4.a /home/decdev/lib/libbufr_4_64.a -o source.x

rm fort.*
ln -sf $1   fort.8
timex ./source.x >bufrdump.out.$2 2> errfile

err=$?

cat errfile >> bufrdump.out.$2

if test "$err" -ne '0'
then
     echo "bufrdump.readmg_only failed - abnormal stop"

else
     echo "bufrdump.readmg_only successful - all done"
fi
##cat bufrdump.out.$2

rm fort.*
